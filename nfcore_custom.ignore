/*
 * -------------------------------------------------
 *  nf-core/rnaseq Nextflow config file
 * -------------------------------------------------
 * Default config options for all environments.
 */

// Global default params, used in configs
params {
   input = 's3://genomics-data-processing/results-nf-rnaseq/organoid-rnaseq-annotations/Samplesheet_S3_links.csv'
   outdir = 's3://genomics-data-processing/results-nf-rnaseq/EIPM-organoid-rnaseq'
   public_data_ids = ''
   skip_sra_fastq_download = false
   genome = 'GRCh38'
   transcript_fasta = 'https://github.com/nf-core/test-datasets/raw/rnaseq/reference/transcriptome.fasta'
   additional_fasta = 'https://github.com/nf-core/test-datasets/raw/rnaseq/reference/gfp.fa.gz'
   splicesites = ''
   gtf_extra_attributes = 'gene_name'
   gtf_group_features = 'gene_id'
   gtf_count_type = 'exon'
   gtf_group_features_type = 'gene_biotype'
   gencode = false
   save_reference = false
   with_umi = false
   umitools_extract_method = 'string'
   umitools_bc_pattern = 'NNNN'
   save_umi_intermeds = false
   clip_r1 = 0
   clip_r2 = 0
   three_prime_clip_r1 = 0
   three_prime_clip_r2 = 0
   trim_nextseq = 0
   save_trimmed = false
   skip_trimming = false
   remove_ribo_rna = false
   save_non_ribo_reads = false
   ribo_database_manifest = '/.nextflow/assets/akv3001/rnaseq/assets/rrna-db-defaults.txt'
   aligner = 'star_salmon'
   pseudo_aligner = 'salmon'
   seq_center = ''
   star_ignore_sjdbgtf = false
   hisat_build_memory = 200
   stringtie_ignore_gtf = false
   min_mapped_reads = 5
   save_merged_fastq = false
   save_unaligned = false
   save_align_intermeds = false
   skip_markduplicates = true
   skip_alignment = false
   skip_qc = false
   skip_bigwig = false
   skip_stringtie = false
   skip_fastqc = false
   skip_preseq = true
   skip_dupradar = true
   skip_qualimap = true
   skip_rseqc = false
   skip_biotype_qc = true
   skip_deseq2_qc = false
   skip_multiqc = false
   deseq2_vst = true
   rseqc_modules = 'bam_stat,inner_distance,infer_experiment,junction_annotation,junction_saturation,read_distribution,read_duplication'
   enable_conda = false
   clusterOptions = ''
   publish_dir_mode = 'copy'
   multiqc_config = ''
   multiqc_title = ''
   email = 'averma@volastratx.com'
   email_on_fail = ''
   max_multiqc_email_size = '25.MB'
   plaintext_email = false
   monochrome_logs = false
   help = false
   igenomes_base = 's3://ngi-igenomes/igenomes/'
   tracedir = 's3://genomics-data-processing/results-nf-rnaseq/EIPM-organoid-rnaseq/pipeline_info'
   igenomes_ignore = false
   singularity_pull_docker_container = false
   custom_config_version = 'master'
   custom_config_base = 'https://raw.githubusercontent.com/akv3001/rnaseq/configs/master'
   hostnames = []
   config_profile_description = 'Minimal test dataset to check pipeline function'
   config_profile_contact = ''
   config_profile_url = ''
   max_memory = '120 GB'
   max_cpus = '18'
   max_time = '2d'
   modules {
      sra_ids_to_runinfo {
         publish_dir = 'public_data'
         publish_files = [tsv:'runinfo']
      }
      sra_runinfo_to_ftp {
         publish_dir = 'public_data'
         publish_files = [tsv:'runinfo']
      }
      sra_fastq_ftp {
         publish_dir = 'public_data'
         publish_files = [fastq.gz:'', md5:'md5']
      }
      sra_to_samplesheet {
         publish_dir = 'public_data'
         publish_files = false
      }
      sra_merge_samplesheet {
         publish_dir = 'public_data'
      }
      gffread {
         args = '--keep-exon-attrs -F -T'
         publish_dir = 'genome'
      }
      cat_fastq {
         publish_dir = 'fastq'
      }
      fastqc {
         args = '--quiet'
      }
      trimgalore {
         args = '--fastqc'
         publish_files = [txt:'', html:'fastqc', zip:'fastqc']
      }
      umitools_extract {
         args = ''
         publish_files = [log:'']
      }
      sortmerna {
         args = '--num_alignments 1 --fastx -v'
         publish_files = [log:'']
      }
      star_genomegenerate {
         publish_dir = 'genome/index'
      }
      star_align {
         args = '--quantMode TranscriptomeSAM --twopassMode Basic --outSAMtype BAM Unsorted --readFilesCommand zcat --runRNGseed 0 --outFilterMultimapNmax 20 --alignSJDBoverhangMin 1 --outSAMattributes NH HI AS NM MD --quantTranscriptomeBan Singleend'
         publish_dir = 'star_salmon'
         publish_files = [out:'log', tab:'log']
      }
      star_salmon_quant {
         publish_dir = 'star_salmon'
      }
      star_salmon_tximport {
         publish_dir = 'star_salmon'
         publish_by_id = true
      }
      star_salmon_merge_counts {
         publish_dir = 'star_salmon'
      }
      hisat2_build {
         publish_dir = 'genome/index'
      }
      hisat2_align {
         args = '--met-stderr --new-summary --dta'
         publish_files = [log:'log']
      }
      rsem_preparereference {
         args = '--star'
         publish_dir = 'genome/index'
         args2 = '--genomeSAindexNbases 7'
      }
      rsem_calculateexpression {
         args = '--star --star-output-genome-bam --star-gzipped-read-file --estimate-rspd --seed 1'
         publish_files = [log:'log', stat:'', results:'']
         publish_dir = 'star_salmon'
      }
      rsem_merge_counts {
         publish_dir = 'star_salmon'
      }
      samtools_sort {
         suffix = '.sorted'
         publish_files = [stats:'samtools_stats', flagstat:'samtools_stats', idxstats:'samtools_stats']
         publish_dir = 'star_salmon'
      }
      salmon_index {
         args = ''
         publish_dir = 'genome/index'
      }
      salmon_quant {
         args = ''
      }
      salmon_tximport {
         publish_by_id = true
      }
      salmon_merge_counts {
         publish_dir = ''
      }
      preseq_lcextrap {
         args = '-verbose -bam -seed 1 -seg_len 100000000'
         publish_files = [txt:'', log:'log']
         publish_dir = 'star_salmon/preseq'
      }
      umitools_dedup {
         publish_files = [tsv:'umitools']
         suffix = '.umi_dedup.sorted'
         publish_dir = 'star_salmon'
      }
      picard_markduplicates {
         args = 'ASSUME_SORTED=true REMOVE_DUPLICATES=false VALIDATION_STRINGENCY=LENIENT TMP_DIR=tmp'
         suffix = '.markdup.sorted'
         publish_files = [bam:'', metrics.txt:'picard_metrics']
         publish_dir = 'star_salmon'
      }
      picard_markduplicates_samtools {
         suffix = '.markdup.sorted'
         publish_files = [bai:'', stats:'samtools_stats', flagstat:'samtools_stats', idxstats:'samtools_stats']
         publish_dir = 'star_salmon'
      }
      stringtie {
         args = '-v'
         publish_dir = 'star_salmon/stringtie'
      }
      subread_featurecounts {
         args = '-B -C'
         publish_dir = 'star_salmon/featurecounts'
      }
      multiqc_custom_biotype {
         publish_dir = 'star_salmon/featurecounts'
      }
      bedtools_genomecov {
         publish_files = false
      }
      ucsc_bedclip {
         suffix = '.clip'
         publish_files = false
      }
      ucsc_bedgraphtobigwig {
         publish_dir = 'star_salmon/bigwig'
      }
      deseq2_qc {
         args = '--id_col 1 --sample_suffix \'\' --outprefix deseq2'
         publish_files = [RData:'', pca.vals.txt:'', plots.pdf:'', sample.dists.txt:'', size_factors:'', log:'']
         publish_dir = 'star_salmon/deseq2_qc'
      }
      qualimap_rnaseq {
         publish_dir = 'star_salmon/qualimap'
      }
      dupradar {
         publish_files = [Dens.pdf:'scatter_plot', Boxplot.pdf:'box_plot', Hist.pdf:'histogram', Matrix.txt:'gene_data', slope.txt:'intercepts_slope']
         publish_dir = 'star_salmon/dupradar'
      }
      rseqc_bamstat {
         publish_dir = 'star_salmon/rseqc/bam_stat'
      }
      rseqc_innerdistance {
         publish_files = [txt:'txt', pdf:'pdf', .r:'rscript']
         publish_dir = 'star_salmon/rseqc/inner_distance'
      }
      rseqc_inferexperiment {
         publish_dir = 'star_salmon/rseqc/infer_experiment'
      }
      rseqc_junctionannotation {
         publish_files = [pdf:'pdf', .r:'rscript', bed:'bed', xls:'xls', log:'log']
         publish_dir = 'star_salmon/rseqc/junction_annotation'
      }
      rseqc_junctionsaturation {
         publish_files = [pdf:'pdf', .r:'rscript']
         publish_dir = 'star_salmon/rseqc/junction_saturation'
      }
      rseqc_readdistribution {
         publish_dir = 'star_salmon/rseqc/read_distribution'
      }
      rseqc_readduplication {
         publish_files = [pdf:'pdf', .r:'rscript', xls:'xls']
         publish_dir = 'star_salmon/rseqc/read_duplication'
      }
      multiqc {
         args = ''
         publish_dir = 'multiqc/star_salmon'
      }
   }
   genomes {
      GRCh37 {
         fasta = 's3://ngi-igenomes/igenomes//Homo_sapiens/Ensembl/GRCh37/Sequence/WholeGenomeFasta/genome.fa'
         bwa = 's3://ngi-igenomes/igenomes//Homo_sapiens/Ensembl/GRCh37/Sequence/BWAIndex/genome.fa'
         bowtie2 = 's3://ngi-igenomes/igenomes//Homo_sapiens/Ensembl/GRCh37/Sequence/Bowtie2Index/'
         star = 's3://ngi-igenomes/igenomes//Homo_sapiens/Ensembl/GRCh37/Sequence/STARIndex/'
         bismark = 's3://ngi-igenomes/igenomes//Homo_sapiens/Ensembl/GRCh37/Sequence/BismarkIndex/'
         gtf = 's3://ngi-igenomes/igenomes//Homo_sapiens/Ensembl/GRCh37/Annotation/Genes/genes.gtf'
         bed12 = 's3://ngi-igenomes/igenomes//Homo_sapiens/Ensembl/GRCh37/Annotation/Genes/genes.bed'
         readme = 's3://ngi-igenomes/igenomes//Homo_sapiens/Ensembl/GRCh37/Annotation/README.txt'
         mito_name = 'MT'
         macs_gsize = '2.7e9'
         blacklist = '/.nextflow/assets/akv3001/rnaseq/assets/blacklists/GRCh37-blacklist.bed'
      }
      GRCh38 {
         fasta = 's3://ngi-igenomes/igenomes//Homo_sapiens/NCBI/GRCh38/Sequence/WholeGenomeFasta/genome.fa'
         bwa = 's3://ngi-igenomes/igenomes//Homo_sapiens/NCBI/GRCh38/Sequence/BWAIndex/genome.fa'
         bowtie2 = 's3://ngi-igenomes/igenomes//Homo_sapiens/NCBI/GRCh38/Sequence/Bowtie2Index/'
         star = 's3://ngi-igenomes/igenomes//Homo_sapiens/NCBI/GRCh38/Sequence/STARIndex/'
         bismark = 's3://ngi-igenomes/igenomes//Homo_sapiens/NCBI/GRCh38/Sequence/BismarkIndex/'
         gtf = 's3://ngi-igenomes/igenomes//Homo_sapiens/NCBI/GRCh38/Annotation/Genes/genes.gtf'
         bed12 = 's3://ngi-igenomes/igenomes//Homo_sapiens/NCBI/GRCh38/Annotation/Genes/genes.bed'
         mito_name = 'chrM'
         macs_gsize = '2.7e9'
         blacklist = '/.nextflow/assets/akv3001/rnaseq/assets/blacklists/hg38-blacklist.bed'
      }
      GRCm38 {
         fasta = 's3://ngi-igenomes/igenomes//Mus_musculus/Ensembl/GRCm38/Sequence/WholeGenomeFasta/genome.fa'
         bwa = 's3://ngi-igenomes/igenomes//Mus_musculus/Ensembl/GRCm38/Sequence/BWAIndex/genome.fa'
         bowtie2 = 's3://ngi-igenomes/igenomes//Mus_musculus/Ensembl/GRCm38/Sequence/Bowtie2Index/'
         star = 's3://ngi-igenomes/igenomes//Mus_musculus/Ensembl/GRCm38/Sequence/STARIndex/'
         bismark = 's3://ngi-igenomes/igenomes//Mus_musculus/Ensembl/GRCm38/Sequence/BismarkIndex/'
         gtf = 's3://ngi-igenomes/igenomes//Mus_musculus/Ensembl/GRCm38/Annotation/Genes/genes.gtf'
         bed12 = 's3://ngi-igenomes/igenomes//Mus_musculus/Ensembl/GRCm38/Annotation/Genes/genes.bed'
         readme = 's3://ngi-igenomes/igenomes//Mus_musculus/Ensembl/GRCm38/Annotation/README.txt'
         mito_name = 'MT'
         macs_gsize = '1.87e9'
         blacklist = '/.nextflow/assets/akv3001/rnaseq/assets/blacklists/GRCm38-blacklist.bed'
      }

      hg38 {
         fasta = 's3://ngi-igenomes/igenomes//Homo_sapiens/UCSC/hg38/Sequence/WholeGenomeFasta/genome.fa'
         bwa = 's3://ngi-igenomes/igenomes//Homo_sapiens/UCSC/hg38/Sequence/BWAIndex/genome.fa'
         bowtie2 = 's3://ngi-igenomes/igenomes//Homo_sapiens/UCSC/hg38/Sequence/Bowtie2Index/'
         star = 's3://ngi-igenomes/igenomes//Homo_sapiens/UCSC/hg38/Sequence/STARIndex/'
         bismark = 's3://ngi-igenomes/igenomes//Homo_sapiens/UCSC/hg38/Sequence/BismarkIndex/'
         gtf = 's3://ngi-igenomes/igenomes//Homo_sapiens/UCSC/hg38/Annotation/Genes/genes.gtf'
         bed12 = 's3://ngi-igenomes/igenomes//Homo_sapiens/UCSC/hg38/Annotation/Genes/genes.bed'
         mito_name = 'chrM'
         macs_gsize = '2.7e9'
         blacklist = '/.nextflow/assets/akv3001/rnaseq/assets/blacklists/hg38-blacklist.bed'
      }
      hg19 {
         fasta = 's3://ngi-igenomes/igenomes//Homo_sapiens/UCSC/hg19/Sequence/WholeGenomeFasta/genome.fa'
         bwa = 's3://ngi-igenomes/igenomes//Homo_sapiens/UCSC/hg19/Sequence/BWAIndex/genome.fa'
         bowtie2 = 's3://ngi-igenomes/igenomes//Homo_sapiens/UCSC/hg19/Sequence/Bowtie2Index/'
         star = 's3://ngi-igenomes/igenomes//Homo_sapiens/UCSC/hg19/Sequence/STARIndex/'
         bismark = 's3://ngi-igenomes/igenomes//Homo_sapiens/UCSC/hg19/Sequence/BismarkIndex/'
         gtf = 's3://ngi-igenomes/igenomes//Homo_sapiens/UCSC/hg19/Annotation/Genes/genes.gtf'
         bed12 = 's3://ngi-igenomes/igenomes//Homo_sapiens/UCSC/hg19/Annotation/Genes/genes.bed'
         readme = 's3://ngi-igenomes/igenomes//Homo_sapiens/UCSC/hg19/Annotation/README.txt'
         mito_name = 'chrM'
         macs_gsize = '2.7e9'
         blacklist = '/.nextflow/assets/akv3001/rnaseq/assets/blacklists/hg19-blacklist.bed'
      }
      mm10 {
         fasta = 's3://ngi-igenomes/igenomes//Mus_musculus/UCSC/mm10/Sequence/WholeGenomeFasta/genome.fa'
         bwa = 's3://ngi-igenomes/igenomes//Mus_musculus/UCSC/mm10/Sequence/BWAIndex/genome.fa'
         bowtie2 = 's3://ngi-igenomes/igenomes//Mus_musculus/UCSC/mm10/Sequence/Bowtie2Index/'
         star = 's3://ngi-igenomes/igenomes//Mus_musculus/UCSC/mm10/Sequence/STARIndex/'
         bismark = 's3://ngi-igenomes/igenomes//Mus_musculus/UCSC/mm10/Sequence/BismarkIndex/'
         gtf = 's3://ngi-igenomes/igenomes//Mus_musculus/UCSC/mm10/Annotation/Genes/genes.gtf'
         bed12 = 's3://ngi-igenomes/igenomes//Mus_musculus/UCSC/mm10/Annotation/Genes/genes.bed'
         readme = 's3://ngi-igenomes/igenomes//Mus_musculus/UCSC/mm10/Annotation/README.txt'
         mito_name = 'chrM'
         macs_gsize = '1.87e9'
         blacklist = '/.nextflow/assets/akv3001/rnaseq/assets/blacklists/mm10-blacklist.bed'
      }



   }
   config_profile_name = 'eipmtest profile'
   fasta = 'https://github.com/nf-core/test-datasets/raw/rnaseq/reference/genome.fa'
   gtf = 'https://github.com/nf-core/test-datasets/raw/rnaseq/reference/genes.gtf.gz'
   gff = 'https://github.com/nf-core/test-datasets/raw/rnaseq/reference/genes.gff.gz'
   hisat2_index = 'https://github.com/nf-core/test-datasets/raw/rnaseq/reference/hisat2.tar.gz'
   star_index = 'https://github.com/nf-core/test-datasets/raw/rnaseq/reference/star.tar.gz'
   salmon_index = 'https://github.com/nf-core/test-datasets/raw/rnaseq/reference/salmon.tar.gz'
   rsem_index = 'https://github.com/nf-core/test-datasets/raw/rnaseq/reference/rsem.tar.gz'
}

process {
   cpus = { check_max( 1 * task.attempt, 'cpus' ) }
   memory = { check_max( 6.GB * task.attempt, 'memory' ) }
   time = { check_max( 4.h * task.attempt, 'time' ) }
   errorStrategy = { task.exitStatus in [143,137,104,134,139] ? 'retry' : 'finish' }
   maxRetries = 1
   maxErrors = '-1'
   withLabel:process_low {
      cpus = { check_max( 2 * task.attempt, 'cpus' ) }
      memory = { check_max( 12.GB * task.attempt, 'memory' ) }
      time = { check_max( 6.h * task.attempt, 'time' ) }
   }
   withLabel:process_medium {
      cpus = { check_max( 6 * task.attempt, 'cpus' ) }
      memory = { check_max( 36.GB * task.attempt, 'memory' ) }
      time = { check_max( 8.h * task.attempt, 'time' ) }
   }
   withLabel:process_high {
      cpus = { check_max( 12 * task.attempt, 'cpus' ) }
      memory = { check_max( 72.GB * task.attempt, 'memory' ) }
      time = { check_max( 16.h * task.attempt, 'time' ) }
   }
   withLabel:process_long {
      time = { check_max( 20.h * task.attempt, 'time' ) }
   }
   withLabel:error_ignore {
      errorStrategy = 'ignore'
   }
   withLabel:error_retry {
      errorStrategy = 'retry'
      maxRetries = 2
   }
   shell = ['/bin/bash', '-euo', 'pipefail']
   executor = 'awsbatch'
   queue = 'TowerForge-1Lkw8h3ffKboreCebliscj-work'
}

env {
   PYTHONNOUSERSITE = 1
   R_PROFILE_USER = '/.Rprofile'
   R_ENVIRON_USER = '/.Renviron'
}

timeline {
   enabled = true
   file = './results/pipeline_info/execution_timeline.html'
}

report {
   enabled = true
   file = './results/pipeline_info/execution_report.html'
}

trace {
   enabled = true
   file = './results/pipeline_info/execution_trace.txt'
}

dag {
   enabled = true
   file = './results/pipeline_info/pipeline_dag.svg'
}

manifest {
   name = 'nf-core/rnaseq'
   author = 'Phil Ewels, Rickard Hammarén'
   homePage = 'https://github.com/nf-core/rnaseq'
   description = 'Nextflow RNA-Seq analysis pipeline, part of the nf-core community.'
   mainScript = 'main.nf'
   nextflowVersion = '!>=20.11.0-edge'
   version = '3.0'
}

docker {
   enabled = true
   runOptions = '-u $(id -u):$(id -g)'
}

aws {
   region = 'us-east-1'
   client {
      uploadChunkSize = 10485760
   }
   batch {
      cliPath = '/home/ec2-user/miniconda/bin/aws'
   }
}

workDir = 's3://genomics-data-processing/scratch/RDOmZc6TGjcIp'
runName = 'magical_mestorf'
resume = '5f22c556-873e-4cfc-97e2-071914f8f665'

tower {
   enabled = true
   endpoint = '-'
}
